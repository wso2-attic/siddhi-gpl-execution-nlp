<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2017 WSO2 Inc. (http://wso2.com)
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses />.
  -->


<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.wso2.extension.siddhi.gpl.execution.nlp</groupId>
        <artifactId>siddhi-gpl-execution-nlp-parent</artifactId>
        <version>5.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>siddhi-gpl-execution-nlp</artifactId>
    <packaging>bundle</packaging>
    <name>Siddhi Gpl Execution NLP Extension</name>
    <description>This is a Siddhi extension that enable natural language processing capability</description>
    <url>https://github.com/wso2-extensions/siddhi-gpl-execution-nlp</url>

    <dependencies>
        <dependency>
            <groupId>io.siddhi</groupId>
            <artifactId>siddhi-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.siddhi</groupId>
            <artifactId>siddhi-query-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.siddhi</groupId>
            <artifactId>siddhi-query-compiler</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.orbit.edu.stanford.nlp</groupId>
            <artifactId>stanford-nlp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.log4j.wso2</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>de.jollyday</groupId>
            <artifactId>jollyday</artifactId>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>documentation-deploy</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.siddhi</groupId>
                        <artifactId>siddhi-doc-gen</artifactId>
                        <version>${siddhi.version}</version>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>deploy-mkdocs-github-pages</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>false</skipTests>
                    <suiteXmlFiles>
                        <suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
                    </suiteXmlFiles>
                    <argLine>${surefireArgLine}</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.plugin.version}</version>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${basedir}/target/coverage-reports/jacoco.exec</destFile>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${basedir}/target/coverage-reports/jacoco.exec</dataFile>
                            <outputDirectory>${basedir}/target/coverage-reports/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.5.3</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                        <Bundle-Name>${project.artifactId}</Bundle-Name>
                        <Private-Package>
                            de.jollyday.*,
                            edu.stanford.nlp.*,
                            holidays.*,
                            java_cup.runtime.*,
                            javax.*,
                            org.apache.*,
                            org.ejml.*,
                            org.joda.time.*,
                            org.slf4j.*,
                            org.w3c.dom.*,
                            org.xml.sax.*
                        </Private-Package>
                        <Export-Package>
                            !de.jollyday.*,
                            !edu.stanford.nlp.*,
                            !holidays.*,
                            !java_cup.runtime.*,
                            !javax.*,
                            !org.apache.*,
                            !org.ejml.*,
                            !org.joda.time.*,
                            !org.slf4j.*,
                            !org.w3c.dom.*,
                            !org.xml.sax.*,
                            org.wso2.extension.siddhi.gpl.execution.nlp.*
                        </Export-Package>
                        <Import-Package>
                            javax.xml.bind,
                            javax.xml.bind.annotation,
                            io.siddhi.core.*;version="${siddhi.version.range}",
                            io.siddhi.query.api.*;version="${siddhi.version.range}",
                            io.siddhi.query.compiler.*;version="${siddhi.version.range}",
                            *;resolution:=optional
                        </Import-Package>
                        <Include-Resource>META-INF=target/classes/META-INF</Include-Resource>
                        <DynamicImport-Package>*</DynamicImport-Package>
                        <Embed-Dependency>jollyday;scope=compile|runtime</Embed-Dependency>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.siddhi</groupId>
                <artifactId>siddhi-doc-gen</artifactId>
                <version>${siddhi.version}</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate-md-docs</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>